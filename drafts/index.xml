<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Drafts on Алексей Жидков</title><link>https://azhidkov.pro/drafts/</link><description>Recent content in Drafts on Алексей Жидков</description><generator>Hugo -- gohugo.io</generator><language>ru-ru</language><lastBuildDate>Tue, 26 Sep 2023 01:25:37 +0700</lastBuildDate><atom:link href="https://azhidkov.pro/drafts/index.xml" rel="self" type="application/rss+xml"/><item><title>Как я превратил легаси-проект в конфетку за полгода. Том 2</title><link>https://azhidkov.pro/drafts/project-e-retro/project-e-part2/</link><pubDate>Tue, 26 Sep 2023 01:25:37 +0700</pubDate><guid>https://azhidkov.pro/drafts/project-e-retro/project-e-part2/</guid><description>ВведениеЭто второй том эпопеи, о том как я превратил легаси-систему в конфетку за полгода.
Том второй. &amp;#34;Доктор сказал в морг, значит в морг&amp;#34; - описание процесса работы, что пошло не по плану, как факапились в проде и чем всё закончилосьТом третий. &amp;#34;Анатомический атлас конфетки&amp;#34; - детали реализации &amp;#34;конфетки&amp;#34;Том четвёртый. &amp;#34;Это наследственное&amp;#34; - какие проблемы были вызваны сменой архитектуры и стэка, а так же необходимостью параллельной работы со старым бэком Из этой части вы узнаете, какие риски стрельнули у меня и, возможно, пополните ими свой чек-лист планирования проектов.</description></item><item><title>Сравнение эффективности работы команд Проекта Э до и после реинжинирига</title><link>https://azhidkov.pro/drafts/project-e-results/</link><pubDate>Mon, 04 Sep 2023 08:25:37 +0700</pubDate><guid>https://azhidkov.pro/drafts/project-e-results/</guid><description>ВведениеМы закончили реинжиниринг Проекта Э, поработали три месяца только с новой кодовой базой и пришло время подводить итоги.
В изначальных критериях успеха реинжиниринга Проекта Э я целился в то, чтобы как минимум удвоить скорость разработки - лучше и объективно, и субъективно по мнению РП и заказчика. Но субъективные ощущения РП и заказчика не совпадают - РП видит увеличение скорости разработки, а заказчик - нет. Поэтому я перелопатил 517 задач в Jira, чтобы понять объективное состояние дел.</description></item><item><title>Диаграмма эффектов: объектно-ориентированная декомпозиция</title><link>https://azhidkov.pro/drafts/effects-diagram/ood-decomposition-v2/</link><pubDate>Wed, 04 Jan 2023 01:25:37 +0700</pubDate><guid>https://azhidkov.pro/drafts/effects-diagram/ood-decomposition-v2/</guid><description>Note: Следить за обновлениями блога можно в моём канале: Эргономичный код
ВведениеГода три назад у меня был &amp;#34;разговор у кулера&amp;#34; с коллегой, в котором я критиковал декомпозицию по слоям. В ответ на это коллега сказал - &amp;#34;Ну это всё понятно. Но по другому-то как?&amp;#34;. На тот момент мне было нечего сказать, кроме общих слов вроде: &amp;#34;эээ…​ нууу…​ это же и есть работа архитектора, надо смотреть на каждый конкретный случай&amp;#34;.</description></item><item><title>Диаграмма Эффектов v0.0.1</title><link>https://azhidkov.pro/drafts/aggregates/effects-diagram-v2/</link><pubDate>Fri, 01 Apr 2022 08:25:37 +0700</pubDate><guid>https://azhidkov.pro/drafts/aggregates/effects-diagram-v2/</guid><description>Note: Следить за обновлениями блога можно в моём канале: Эргономичный код
Note: Этот пост является первой попыткой описать диаграмму формально, поэтому в описании возможны неточности и пробелы, а детали и нотация наверняка изменятся в будущем.
ВведениеЭффекты, на ряду с моделью информации, являются душой информационной системы - что-то сохранить в БД, что-то запросить из внешнего сервиса, что-то запросить из нескольких источников, объединить это и записать куда-то, в общем как-то по взаимодействовать с окружающим миром.</description></item><item><title>Черновик: Диаграмма Эффектов v0.0.1</title><link>https://azhidkov.pro/drafts/aggregates/effects-diagram/</link><pubDate>Fri, 01 Apr 2022 08:25:37 +0700</pubDate><guid>https://azhidkov.pro/drafts/aggregates/effects-diagram/</guid><description>ВведениеСейчас самым распространённым способом декомпозиции ПО является декомпозиция по техническим аспектам - сервисы, сущности, исключения и т.п. И хотя многие известные и авторитетные авторы - такие как Константин, Парнас, Эванс и Мартин - критикуют такой способ декомпозиции, никто из них не даёт альтернативной практической методики.
Я потратил несколько лет на поиски готового способа декомпозиции, отличного от декомпозиции по техническим аспектам. Однако ничего не нашёл и потратил ещё два года на разработку собственного.</description></item><item><title>Черновик: Основные подходы к моделированию информации - объектная и реляционные модели информации</title><link>https://azhidkov.pro/drafts/aggregates/information-modeling/</link><pubDate>Fri, 01 Apr 2022 08:25:37 +0700</pubDate><guid>https://azhidkov.pro/drafts/aggregates/information-modeling/</guid><description>Моделирование информацииВведение Сущности, связи, атрибуты, состояние, данные, объекты, объекты-значения, идентичность и все-все-всеУниверсальные понятияИдентичность хреновиныНа базе ИДа (места) На базе атрибутов Состояние Сущность Значение Изменяемость/неизменяемость Абстрактная модельСущность Атрибут ??? значение/тип/домен Связь Модель информации на базе записей ER-модель Реляционная модель ХХХ-модель на базе структур (данных)Поля (атрибуты) УУУ-модель на базе указателей/объектовОбъект-значение (это симуляция данных в языках, в которых есть только объекты) Свойства (поля/атрибуты)Сущности концептуально изменяемы. Но представлять их лучше как последовательность неизменяемых данных</description></item></channel></rss>