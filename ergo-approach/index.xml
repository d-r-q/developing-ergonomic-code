<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ergo-approaches on Алексей Жидков</title><link>https://azhidkov.pro/ergo-approach/</link><description>Recent content in Ergo-approaches on Алексей Жидков</description><generator>Hugo -- gohugo.io</generator><language>ru-ru</language><lastBuildDate>Sat, 10 Dec 2022 01:25:37 +0700</lastBuildDate><atom:link href="https://azhidkov.pro/ergo-approach/index.xml" rel="self" type="application/rss+xml"/><item><title>Автоматизация тестирования</title><link>https://azhidkov.pro/ergo-approach/guideline/test-automation/</link><pubDate>Sat, 10 Dec 2022 01:25:37 +0700</pubDate><guid>https://azhidkov.pro/ergo-approach/guideline/test-automation/</guid><description>Общие принципы тестированияГлавный принцип - тесты должны проверять код, на то, что он соответствует требованиям стейкхолдеров.
Для этого тесты должны:
Работать с системой в конфигурации максимально приближенной к боевойИметь имена сформулированные в виде требованияВзаимодействовать с системой так же, как с ней взаимодействуют клиенты - то есть через публичное АПИ.
Общая структура кодовой базы тестовВерхнеуровнево, кодовая база тестов состоит из следующих пакетов:
assertions - классы с доменно-специфичными ассёртамиbackgrounds - классы для сетапа часто используемых наборов фикстуры - зарегестрированный пользователь, стандартный набор событий, пара наблюдатель-наблюдаемый и т.</description></item><item><title>Гайдлайн разработки по эргономичному подходу</title><link>https://azhidkov.pro/ergo-approach/guideline/g-index/</link><pubDate>Sat, 10 Dec 2022 01:25:37 +0700</pubDate><guid>https://azhidkov.pro/ergo-approach/guideline/g-index/</guid><description>Содержание:</description></item><item><title>Работа с Git</title><link>https://azhidkov.pro/ergo-approach/guideline/git/</link><pubDate>Sat, 10 Dec 2022 01:25:37 +0700</pubDate><guid>https://azhidkov.pro/ergo-approach/guideline/git/</guid><description>Именование ветокИмена веток формируются по шаблону &amp;lt;issue-code&amp;gt;/&amp;lt;short-descr&amp;gt; - например qg-81/create-client. Можно заводить по несколько веток на одну задачу.
Сообщения коммитовИспользуется соглашение, вдохновлённое (Conventional Commits
Используемые типы коммитов:
build: Изменения сборки (в том числе зависимостей) проектаchore: Мелкие непонятные изменения (исравление проблем после мёржа/ребейза, забытые изменения и т.п.)ci: Изменения в скриптах CIdocs: Изменения только в документацииenv: Изменения в дев-окружении проекта (добавление/исправление ран-конфигов, скриптов, конфигов тулов, локальный докер-файлов и т.п.)feat: Изменения добавляющие новую функциональностьfix: Изменения исправляющие багops: Изменения связанные с эксплуатацией проекта (дополнительные параметры конфигурации, логи, метрики, мониторинг и т.</description></item><item><title>Эргономичный подход</title><link>https://azhidkov.pro/ergo-approach/landing/</link><pubDate>Sat, 10 Dec 2022 01:25:37 +0700</pubDate><guid>https://azhidkov.pro/ergo-approach/landing/</guid><description>Эргономичный подход (ЭП) - это гайдлайн разработки бакендов информационных систем. Он помогает команде систематически обеспечивать высокое качество и скорость решения задач бизнеса на протяжении всего срока жизни проекта.
Краеугольным камнем ЭП является понятие эффекта - желательного для пользователя изменения в окружающем мире, выполняемого системой. Это понятие лежит в основе трёх ключевых характерных черт эргономичных кодовых баз, то есть кодовых баз, выполненных по гайдлайну Эргономичного подхода:
Эргономичные кодовые базы должны быть декомпозированы на модули на базе эффектов.</description></item></channel></rss>