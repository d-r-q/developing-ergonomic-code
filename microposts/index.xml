<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Microposts on Алексей Жидков</title><link>https://azhidkov.pro/microposts/</link><description>Recent content in Microposts on Алексей Жидков</description><generator>Hugo -- gohugo.io</generator><language>ru-ru</language><lastBuildDate>Sat, 23 Mar 2024 08:25:37 +0700</lastBuildDate><atom:link href="https://azhidkov.pro/microposts/index.xml" rel="self" type="application/rss+xml"/><item><title>Тестирование Trainer Advisor: теория</title><link>https://azhidkov.pro/microposts/24/03/trainer-advisor-testing-theory/</link><pubDate>Sat, 23 Mar 2024 08:25:37 +0700</pubDate><guid>https://azhidkov.pro/microposts/24/03/trainer-advisor-testing-theory/</guid><description>Note: Этот материал является &amp;#34;микропостом&amp;#34; - текстом, написанным в режиме потока сознания без особой редактуры.
Следить за обновлениями блога можно в Telegram-канале: Эргономичный код.
ВведениеЭто первый пост об устройстве тестирования Trainer Advisor. В этом посте я расскажу какие принципы и модели лежат в основе тестирования TA, а в последующих постах подробно разберу все ключевые виды тестового кода в проекте.
Но начать надо с того, чтобы решить куда мы хотим прийти - какими должны быть тесты?</description></item><item><title>Trainer Advisor - архитектура и стэк</title><link>https://azhidkov.pro/microposts/24/03/trainer-advisor-arch-and-stack/</link><pubDate>Wed, 20 Mar 2024 08:25:37 +0700</pubDate><guid>https://azhidkov.pro/microposts/24/03/trainer-advisor-arch-and-stack/</guid><description>Note: Этот материал является &amp;#34;микропостом&amp;#34; - текстом, написанным в режиме потока сознания без особой редактуры.
Следить за обновлениями блога можно в канале: Эргономичный код
В этом микропосте я для галочки опишу архитектуру и стек Trainer Advisor.
Проект по сути своей является простым - я его делаю один, у него не предполагается супер динамичного пользовательского интерфейса, пользовательская база сейчас состоит из одного человека, а в самых безбашенных мечтах она не превысит нескольких тысяч человек.</description></item><item><title>Проектирование модели данных клинического мышления в Trainer Advisor</title><link>https://azhidkov.pro/microposts/24/01/trainer-advisor-modeling/</link><pubDate>Mon, 15 Jan 2024 07:25:37 +0700</pubDate><guid>https://azhidkov.pro/microposts/24/01/trainer-advisor-modeling/</guid><description>Note: Этот материал является &amp;#34;микропостом&amp;#34; - текстом, написанным в режиме потока сознания без особой редактуры.
Следить за обновлениями блога можно в моём канале: Эргономичный код
На текущий момент самой сложной частью Trainer Advisor (ранее - QYoga) является модель &amp;#34;клинического мышления&amp;#34; - то, как терапевт подбирает упражнения для клиента. В этом посте я расскажу то, как мы проектировали модель данных для неё.
Естественно, первым делом мы с экспертом нарисовали ER-диаграмму этой модели (в Эргономичной нотации):</description></item><item><title>Гайдлайн разработчика Проекта Э</title><link>https://azhidkov.pro/microposts/23/12/project-e-dev-guidline/</link><pubDate>Wed, 20 Dec 2023 08:25:37 +0700</pubDate><guid>https://azhidkov.pro/microposts/23/12/project-e-dev-guidline/</guid><description>Note: Этот материал является &amp;#34;микропостом&amp;#34; - текстом, написанным в режиме потока сознания без особой редактуры.
Следить за обновлениями блога можно в моём канале: Эргономичный код
Note: После написания первоначальной версии в конце 2022 года я этот гайдлайн практически не актуализировал, хотя по ходу работы что-то просто не прижилось, а что-то оказалось плохой затеей. Все такие места я постарался подсветить в тексте соответствующими предупреждениями.
Этот микропост является практически полной копией (за исключением небольших правок во имя NDA) Confluence-страницы &amp;#34;Руководство разработчика Проекта Э&amp;#34;.</description></item><item><title>Trainer Advisor</title><link>https://azhidkov.pro/microposts/23/11/qyoga/</link><pubDate>Wed, 13 Dec 2023 08:25:37 +0700</pubDate><guid>https://azhidkov.pro/microposts/23/11/qyoga/</guid><description>Note: Этот материал является &amp;#34;микропостом&amp;#34; - текстом, написанным в режиме потока сознания без особой редактуры.
Следить за обновлениями блога можно в моём канале: Эргономичный код
В этом посте я общими словами опишу Trainer Advisor (GitHub) - проект, на примере которого я буду демонстрировать Эргономичный подход.
Trainer Advisor - это сервис для йогатерапевтов и тренеров умного фитнеса, который призван решить следующие их боли:
При большом количестве клиентов сложно держать в голове анамнез каждого клиента;При большом количестве занятий сложно обеспечить высокую вариативность программ;Подготовка программы, учитывающей особенности и историю клиента, требует большого количества времени и усилий;Подготовка документа с программой для самостоятельной практики требует большого количества времени и усилий;Подбор диагностических опросников, подходящих для определенной задачи, требует большого количества времени и усилий.</description></item><item><title>Ответы на вопросы по Эргономичной нотации ER-модели</title><link>https://azhidkov.pro/microposts/23/11/irdm-answers/</link><pubDate>Fri, 24 Nov 2023 08:25:37 +0700</pubDate><guid>https://azhidkov.pro/microposts/23/11/irdm-answers/</guid><description>Note: Этот материал является &amp;#34;микропостом&amp;#34; - текстом, написанным в режиме потока сознания без особой редактуры.
Следить за обновлениями блога можно в моём канале: Эргономичный код
В этом посте я отвечу на вопросы, которые задали в комментариях к посту об Эргономичной нотации ER-модели.
Зачем нужна эта нотация? какую задачу решает?Глобально - для тех же целей, что и оригинальная нотация Чена или нотация вороньей лапки - описание предметной области.
Для того чтобы концептуальная модель бесшовно легла на реализацию в виде деревьев неизменяемых структур данных важно, чтобы нотация её описания включала понятие слабой сущности, которого не хватает в нотации вороньей лапки.</description></item><item><title>Нотация описания неизменяемой модели данных</title><link>https://azhidkov.pro/microposts/23/11/immutable-relation-data-model-v2/</link><pubDate>Thu, 23 Nov 2023 08:25:37 +0700</pubDate><guid>https://azhidkov.pro/microposts/23/11/immutable-relation-data-model-v2/</guid><description>Note: Этот материал является &amp;#34;микропостом&amp;#34; - текстом, написанным в режиме потока сознания без особой редактуры.
Следить за обновлениями блога можно в моём канале: Эргономичный код
Эргономичная ER-модельОбщее описаниеВ основе моей нотации описания модели данных лежит классическая ER-модель и нотация вороньей лапки, с небольшими изменениями:
В нотацию вороньей лапки добавлено понятие слабой сущности из классической нотации;В нотации вороньей лапки разделены владеющие (идентифицирующие в оригинальной терминологии) отношения (между стержневой и слабой сущностью) и невладеющие отношения (между стержневыми сущностями);Добавлено понятие контекста (а-ля DDD);Добавлено понятие импортированной стержневой сущности - это сущность из контекста А, на которую есть ссылка в сущности в контексте Б;Добавлено понятие логического агрегата (а-ля DDD) - это стержневая сущность и все её слабые сущности.</description></item><item><title>Перевод сервиса на Spring Boot Native</title><link>https://azhidkov.pro/microposts/23/09/spring-boot-native/</link><pubDate>Mon, 11 Sep 2023 08:25:37 +0700</pubDate><guid>https://azhidkov.pro/microposts/23/09/spring-boot-native/</guid><description>Note: Этот материал является &amp;#34;микропостом&amp;#34; - текстом, написанным в режиме потока сознания без особой редактуры.
Следить за обновлениями блога можно в моём канале: Эргономичный код
Я начал двигать Проект Э в сторону микроядерной архитектуры. Пока план такой что, в оригинальном монолите останутся ядерные модули, которые, частично в силу предметной области, а частично в силу дизайна оригинального бэка, который я перенёс как есть при реинжинирнге, довольно сильно сцеплены между собой, а интеграции (которых у нас уже три и предвидится ещё пачка) мы будем делать в отдельных сервисах.</description></item><item><title>Сравнение эффективности работы команд Проекта Э до и после реинжинирига</title><link>https://azhidkov.pro/microposts/23/07/project-e-retro-v3/</link><pubDate>Sun, 27 Aug 2023 08:25:37 +0700</pubDate><guid>https://azhidkov.pro/microposts/23/07/project-e-retro-v3/</guid><description>ВведениеВ изначальных критериях успеха этой реинжиниринга Проекта Э я целился в то, чтобы как минимум удвоить скорость разработки.
Субъективные ощущения РП и заказчика противоречат друг другу - РП субъективно видит увеличение скорости разработки, а заказчик - нет.
Поэтому я перелопатил 517 задач в Jira, чтобы понять объективное состояние дел. ТЛДР - по статистике количество трудозатрат и багов и правда удалось снизилось в 2 раза. Подробности исследования - далее в посте.</description></item><item><title>Дизайн интеграции с ЕМИАС</title><link>https://azhidkov.pro/microposts/23/08/emias-integration/</link><pubDate>Tue, 01 Aug 2023 08:25:37 +0700</pubDate><guid>https://azhidkov.pro/microposts/23/08/emias-integration/</guid><description>Note: Этот материал является &amp;#34;микропостом&amp;#34; - текстом, написанным в режиме потока сознания без особой редактуры.
Следить за обновлениями блога можно в моём канале: Эргономичный код
В Проекте Э появилась задача выполнить интеграцию с ЕМИАС города Москвы. В какой-то момент показалось, что там будет &amp;#34;сложный случай&amp;#34; в кластеризации диаграммы эффектов. В конечном итоге всё обошлось, но я решил собрать из этого микропост с демонстрацией того, что делать в сложных случаях.</description></item><item><title>Микроретро Проекта Э</title><link>https://azhidkov.pro/microposts/23/07/project-e-retro-v2/</link><pubDate>Fri, 30 Jun 2023 08:25:37 +0700</pubDate><guid>https://azhidkov.pro/microposts/23/07/project-e-retro-v2/</guid><description>Note: Этот материал является &amp;#34;микропостом&amp;#34; - текстом, написанным в режиме потока сознания без особой редактуры.
Следить за обновлениями блога можно в моём канале: Эргономичный код
Пост с ретро Проекта Э идёт со скрипом. Преимущественно потому, что последние несколько недель я искал ответ на вопрос &amp;#34;стоило ли делать реинжиниринг&amp;#34;. Напомню, что в изначальных критериях успеха этой авантюры я целился в то, чтобы как минимум удвоить скорость разработки:
Как я буду оценивать результаты</description></item><item><title>REST, фронт и все-все-все</title><link>https://azhidkov.pro/microposts/23/06/rest-fronts-and-others/</link><pubDate>Tue, 27 Jun 2023 08:25:37 +0700</pubDate><guid>https://azhidkov.pro/microposts/23/06/rest-fronts-and-others/</guid><description>Note: Этот материал является &amp;#34;микропостом&amp;#34; - текстом, написанным в режиме потока сознания без особой редактуры.
Следить за обновлениями блога можно в моём канале: Эргономичный код
Я прочитал штук пять книг по REST, включая диссертацию Филдинга и для себя пришёл к выводу, что REST без HATEOS - это не REST. А HATEOS в случае толстых клиентов не работает. Соответственно смирился с тем, что мы (90% индустрии) на самом деле делаем RPC over HTTP и успокоился.</description></item><item><title>Эргономичная структура программ в3</title><link>https://azhidkov.pro/microposts/23/06/ergo-structure-v3/</link><pubDate>Thu, 22 Jun 2023 08:25:37 +0700</pubDate><guid>https://azhidkov.pro/microposts/23/06/ergo-structure-v3/</guid><description>Note: Этот материал является &amp;#34;микропостом&amp;#34; - текстом, написанным в режиме потока сознания без особой редактуры.
Следить за обновлениями блога можно в моём канале: Эргономичный код
Я продолжаю в режиме гамак-дривен девелопмента думать над этими проблемами.
И в рамках этого думания пошёл читать Lean Architecture, в которой среди прочего описывается и Data-Context-Interaction - штука от автора MVC. Он (автор MVC) ещё жив, by the way.
Лейтмотив книги, на мой взгляд, заключается в тезисе, что системы состоят из двух частей - what-the-system-is и what-the-system-does.</description></item><item><title>Потоковый джоин в Проекте Э</title><link>https://azhidkov.pro/microposts/23/06/streaming-join/</link><pubDate>Thu, 15 Jun 2023 08:25:37 +0700</pubDate><guid>https://azhidkov.pro/microposts/23/06/streaming-join/</guid><description>Note: Этот материал является &amp;#34;микропостом&amp;#34; - текстом, написанным в режиме потока сознания без особой редактуры.
Следить за обновлениями блога можно в моём канале: Эргономичный код
При реинжинринге Проекта Э мы сохранили разделение БД, хранящих персональные и медицинские данные пользователей. Во имя соответствия ФЗ-152.
У меня до сих пор вызывает сомнения утверждение, что ФЗ-152 действительно требует раздельного хранения, но толком вникнуть в тему и предоставить контраргументов я не смог, поэтому поехали дальше как есть.</description></item><item><title>Гарантия отправки "ровно один раз"</title><link>https://azhidkov.pro/microposts/23/06/exactly-once-send/</link><pubDate>Fri, 02 Jun 2023 08:25:37 +0700</pubDate><guid>https://azhidkov.pro/microposts/23/06/exactly-once-send/</guid><description>Note: Этот материал является &amp;#34;микропостом&amp;#34; - текстом, написанным в режиме потока сознания без особой редактуры.
Следить за обновлениями блога можно в моём канале: Эргономичный код
В Проекте Э, мы интегрируемся с внешней системой, отправляя туда часть записей дневника пользователя по протоколу MQTT. И коллеги попросили делать это ровно один раз. Что невозможно в нашей вселенной.
Я написал для них обоснование невозможности выполнить их просьбу и решил это оформить в микропост в блог.</description></item><item><title>Дальнейшие планы работы над Эргономичным подходом</title><link>https://azhidkov.pro/microposts/23/04/plans/</link><pubDate>Sat, 29 Apr 2023 08:25:37 +0700</pubDate><guid>https://azhidkov.pro/microposts/23/04/plans/</guid><description>Note: Этот материал является &amp;#34;микропостом&amp;#34; - текстом, написанным в режиме потока сознания без особой редактуры.
Следить за обновлениями блога можно в моём канале: Эргономичный код
Привет!
Разобрался с делами, накопившимися после конфы, перевёл немного дух и пишу обещанный пост с моими дальнейшими планами. Ну как планами - я не человек плана, поэтому это те области, которые на данный момент я бы хотел затронуть в рамках Эргономичного подхода. Без сроков и даже порядка.</description></item><item><title>Опыт внедрения инструментов статического анализа кода в Проект Э</title><link>https://azhidkov.pro/microposts/23/03/project-e-static-analysis/</link><pubDate>Thu, 09 Mar 2023 08:25:37 +0700</pubDate><guid>https://azhidkov.pro/microposts/23/03/project-e-static-analysis/</guid><description>Note: Этот материал является &amp;#34;микропостом&amp;#34; - текстом, написанным в режиме потока сознания без особой редактуры.
Следить за обновлениями блога можно в моём канале: Эргономичный код
Привет!
Я внедрил в Проект Э три тула статического анализа кода - Detekt, Kover и ArchUnit - и хочу поделиться, что из этого вышло.
DetektДетект появился с подачи РП, если не вдаваться в детали. В какой-то момент у нас был ботлнек на моём ревью, и РП хотел так его решить.</description></item><item><title>Обзор доклада "Меняем Spring Data JPA на Spring Data JDBC!"</title><link>https://azhidkov.pro/microposts/23/01/jpa-to-jdbc-migration/</link><pubDate>Tue, 03 Jan 2023 08:25:37 +0700</pubDate><guid>https://azhidkov.pro/microposts/23/01/jpa-to-jdbc-migration/</guid><description>Note: Этот материал является &amp;#34;микропостом&amp;#34; - текстом, написанным в режиме потока сознания без особой редактуры.
Следить за обновлениями блога можно в моём канале: Эргономичный код
Привет!
Посмотрел Меняем Spring Data JPA на Spring Data JDBC! и хотя докладчик в начале сказал, что не призывает использовать JPA, мне что-то захотелось написать микропост в защиту Spring Data JDBC (далее - просто JDBC).
Я сначала кратко напишу своё отношение к JDBC и почему я всё ещё его использую, а потом пройдусь по тезисам из доклада, которые хочу оспорить/прокомментировать.</description></item><item><title>Функциональные программы проще понимать</title><link>https://azhidkov.pro/microposts/22/12/why-fp-simpler/</link><pubDate>Thu, 22 Dec 2022 08:25:37 +0700</pubDate><guid>https://azhidkov.pro/microposts/22/12/why-fp-simpler/</guid><description>Note: Этот материал является &amp;#34;микропостом&amp;#34; - текстом, написанным в режиме потока сознания без особой редактуры.
Следить за обновлениями блога можно в моём канале: Эргономичный код
Последние несколько дней перечитывают блог (кто бы мог подумать, чтоб блоги тоже можно перечитывать) Тэда Каминского. Во-первых, в очередной раз настоятельно рекомендую его почитать - там очень много очень мудрых мыслей, мужик прям понимает суть программирования.
Во-вторых, там снова откопал пост, который объясняет почему ФП проще.</description></item><item><title>Эргономичный подход на JPoint</title><link>https://azhidkov.pro/microposts/22/11/ea-at-jpoint/</link><pubDate>Fri, 18 Nov 2022 08:25:37 +0700</pubDate><guid>https://azhidkov.pro/microposts/22/11/ea-at-jpoint/</guid><description>Привет!
У меня ребёнок начал стабильно ходить в детский сад! Пока писал пост - снова заболел🤦‍♂️.
Как это касается вас? Во-первых, если у вас сейчас первый ребёнок до трёх лет - верьте, свет в конце туннеля есть, вместе с садом у вас начнётся новая жизнь:)
Например, у вас снова появится время смотреть видосики в интернете:) И я вот посмотрел доклад c JPoint &amp;#34;Эргономичный подход TDD&amp;amp;DDD — гайд по разработке бизнес-логики&amp;#34;. Репозиторий доклада.</description></item><item><title>Заметки по докладам со Spring IO 2022</title><link>https://azhidkov.pro/microposts/22/10/spring-one-22/</link><pubDate>Thu, 03 Nov 2022 08:25:37 +0700</pubDate><guid>https://azhidkov.pro/microposts/22/10/spring-one-22/</guid><description>На той неделе я был в полуотпуске и посмотрел 3 миллиона видео со Spring IO 2022 и SpringOne 2021. На удивление, из докладов SpringOne (вроде как главной конфы по Spring) - меня вообще ничего не заинтересовало. Большую часть я даже открывать не стал, а то что посмотрел - зря время потратил, хоть и на x1.5 и многое просто перематывая.
А вот на Spring IO было много прям крутых докладов и я собрал микропост (пост, написанный за один проход без редактуры) из своих заметок по этим видео.</description></item><item><title>Планирование реинженеринга Проекта Э</title><link>https://azhidkov.pro/microposts/22/10/project-e-planning/</link><pubDate>Mon, 24 Oct 2022 08:25:37 +0700</pubDate><guid>https://azhidkov.pro/microposts/22/10/project-e-planning/</guid><description>В этом микропосте (посте, написанном за один проход без редактуры) я решил рассказать, как я спланировал работы по реинженерингу Проекта Э.
Начал я с того, что с помощью одного из джунов построил граф эндпоинтов (как REST, так и RabbitMQ) микросервисов и зависимостей между ними. Каждому эндпоинту я на глаз присвоил &amp;#34;размер&amp;#34; - xs, s, m, l, xl. Для того, чтобы граф был более нагляден, я цветом закодировал тип эндпоинта (зелёных - REST, синий - RabbitMQ RPC, красный - RabbitMQ Event), а насыщенностью - его размер.</description></item><item><title>Потока-сознания-пост: и снова о декомпозиции</title><link>https://azhidkov.pro/microposts/22/08/decomposition-history/</link><pubDate>Tue, 09 Aug 2022 08:25:37 +0700</pubDate><guid>https://azhidkov.pro/microposts/22/08/decomposition-history/</guid><description>Note: Этот материал является &amp;#34;микропостом&amp;#34; - текстом, написанным в режиме потока сознания без редактуры.
Следить за обновлениями блога можно в моём канале: Эргономичный код
ПредисторияДавным-давно, я знал только один подход к декомпозиции систем на базе &amp;#34;здравого смысла&amp;#34; и кластерного анализа. Декомпозиция по слоям - не в счёт, это не подход к декомпозиции, а избегание этой самой декомпозиции. Этим подходом, на самом деле, я пользуюсь до сих пор в случаях, когда надо максимально быстро выкатить первый &amp;#34;ходячий скелет&amp;#34; проекта.</description></item></channel></rss>